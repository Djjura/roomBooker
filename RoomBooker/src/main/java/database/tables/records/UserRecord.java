/*
 * This file is generated by jOOQ.
 */
package database.tables.records;


import database.tables.User;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record6<String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>diplomski.user.uuid</code>.
     */
    public UserRecord setUuid(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>diplomski.user.uuid</code>.
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>diplomski.user.name</code>.
     */
    public UserRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>diplomski.user.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>diplomski.user.role</code>.
     */
    public UserRecord setRole(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>diplomski.user.role</code>.
     */
    public String getRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>diplomski.user.email</code>.
     */
    public UserRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>diplomski.user.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>diplomski.user.password</code>.
     */
    public UserRecord setPassword(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>diplomski.user.password</code>.
     */
    public String getPassword() {
        return (String) get(4);
    }

    /**
     * Setter for <code>diplomski.user.mobile_number</code>.
     */
    public UserRecord setMobileNumber(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>diplomski.user.mobile_number</code>.
     */
    public String getMobileNumber() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return User.USER.UUID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.ROLE;
    }

    @Override
    public Field<String> field4() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field6() {
        return User.USER.MOBILE_NUMBER;
    }

    @Override
    public String component1() {
        return getUuid();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getRole();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    @Override
    public String component6() {
        return getMobileNumber();
    }

    @Override
    public String value1() {
        return getUuid();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getRole();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    @Override
    public String value6() {
        return getMobileNumber();
    }

    @Override
    public UserRecord value1(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setMobileNumber(value);
        return this;
    }

    @Override
    public UserRecord values(String value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(String uuid, String name, String role, String email, String password, String mobileNumber) {
        super(User.USER);

        setUuid(uuid);
        setName(name);
        setRole(role);
        setEmail(email);
        setPassword(password);
        setMobileNumber(mobileNumber);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(database.tables.pojos.User value) {
        super(User.USER);

        if (value != null) {
            setUuid(value.getUuid());
            setName(value.getName());
            setRole(value.getRole());
            setEmail(value.getEmail());
            setPassword(value.getPassword());
            setMobileNumber(value.getMobileNumber());
            resetChangedOnNotNull();
        }
    }
}
