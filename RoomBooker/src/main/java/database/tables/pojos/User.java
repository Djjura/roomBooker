/*
 * This file is generated by jOOQ.
 */
package database.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User implements Serializable {

    private static final long serialVersionUID = 1L;

    private String uuid;
    private String name;
    private String role;
    private String email;
    private String password;
    private String mobileNumber;

    public User() {}

    public User(User value) {
        this.uuid = value.uuid;
        this.name = value.name;
        this.role = value.role;
        this.email = value.email;
        this.password = value.password;
        this.mobileNumber = value.mobileNumber;
    }

    public User(
        String uuid,
        String name,
        String role,
        String email,
        String password,
        String mobileNumber
    ) {
        this.uuid = uuid;
        this.name = name;
        this.role = role;
        this.email = email;
        this.password = password;
        this.mobileNumber = mobileNumber;
    }

    /**
     * Getter for <code>diplomski.user.uuid</code>.
     */
    public String getUuid() {
        return this.uuid;
    }

    /**
     * Setter for <code>diplomski.user.uuid</code>.
     */
    public User setUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }

    /**
     * Getter for <code>diplomski.user.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>diplomski.user.name</code>.
     */
    public User setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>diplomski.user.role</code>.
     */
    public String getRole() {
        return this.role;
    }

    /**
     * Setter for <code>diplomski.user.role</code>.
     */
    public User setRole(String role) {
        this.role = role;
        return this;
    }

    /**
     * Getter for <code>diplomski.user.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>diplomski.user.email</code>.
     */
    public User setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>diplomski.user.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>diplomski.user.password</code>.
     */
    public User setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>diplomski.user.mobile_number</code>.
     */
    public String getMobileNumber() {
        return this.mobileNumber;
    }

    /**
     * Setter for <code>diplomski.user.mobile_number</code>.
     */
    public User setMobileNumber(String mobileNumber) {
        this.mobileNumber = mobileNumber;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final User other = (User) obj;
        if (this.uuid == null) {
            if (other.uuid != null)
                return false;
        }
        else if (!this.uuid.equals(other.uuid))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.mobileNumber == null) {
            if (other.mobileNumber != null)
                return false;
        }
        else if (!this.mobileNumber.equals(other.mobileNumber))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.mobileNumber == null) ? 0 : this.mobileNumber.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("User (");

        sb.append(uuid);
        sb.append(", ").append(name);
        sb.append(", ").append(role);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(mobileNumber);

        sb.append(")");
        return sb.toString();
    }
}
