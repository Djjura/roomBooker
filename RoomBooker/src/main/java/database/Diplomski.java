/*
 * This file is generated by jOOQ.
 */
package database;


import database.tables.Exam;
import database.tables.ExamTerm;
import database.tables.Proffesor;
import database.tables.Reservations;
import database.tables.Room;
import database.tables.Term;
import database.tables.User;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Diplomski extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>diplomski</code>
     */
    public static final Diplomski DIPLOMSKI = new Diplomski();

    /**
     * The table <code>diplomski.exam</code>.
     */
    public final Exam EXAM = Exam.EXAM;

    /**
     * The table <code>diplomski.exam_term</code>.
     */
    public final ExamTerm EXAM_TERM = ExamTerm.EXAM_TERM;

    /**
     * The table <code>diplomski.proffesor</code>.
     */
    public final Proffesor PROFFESOR = Proffesor.PROFFESOR;

    /**
     * The table <code>diplomski.reservations</code>.
     */
    public final Reservations RESERVATIONS = Reservations.RESERVATIONS;

    /**
     * The table <code>diplomski.room</code>.
     */
    public final Room ROOM = Room.ROOM;

    /**
     * The table <code>diplomski.term</code>.
     */
    public final Term TERM = Term.TERM;

    /**
     * The table <code>diplomski.user</code>.
     */
    public final User USER = User.USER;

    /**
     * No further instances allowed
     */
    private Diplomski() {
        super("diplomski", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Exam.EXAM,
            ExamTerm.EXAM_TERM,
            Proffesor.PROFFESOR,
            Reservations.RESERVATIONS,
            Room.ROOM,
            Term.TERM,
            User.USER
        );
    }
}
